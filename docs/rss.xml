<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>枕上诗书闲的博客</title><link>https://hantianzhun.github.io/blog</link><description>个人使用的一个博客</description><copyright>枕上诗书闲的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/118879111?v=4</url><title>avatar</title><link>https://hantianzhun.github.io/blog</link></image><lastBuildDate>Fri, 17 Jan 2025 14:48:12 +0000</lastBuildDate><managingEditor>枕上诗书闲的博客</managingEditor><ttl>60</ttl><webMaster>枕上诗书闲的博客</webMaster><item><title>Navicat的历史版本</title><link>https://hantianzhun.github.io/blog/post/10.html</link><description>## 1.通过固定链接下载

### Navicat的官网提供了部分历史版本的下载链接，你可以根据需要选择对应版本下载。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/10.html</guid><pubDate>Fri, 17 Jan 2025 14:47:50 +0000</pubDate></item><item><title>Linux基础知识和命令</title><link>https://hantianzhun.github.io/blog/post/9.html</link><description>## 1.为什么要学习Linux，Linux在工作中用来干什么？&#13;
&#13;
1. Linux在工作中主要用于环境部署（程序代码包  .jar  .war）--&gt;部署到服务器上--&gt;有页面或者是app端&#13;
2. 使用服务器获取日志，协助定位问题&#13;
&#13;
## 2.计算机组成&#13;
&#13;
### 2.1硬件&#13;
&#13;
- 显示器 、鼠标 、键盘 、主机（主板  内存条   网卡  显卡 声卡   CPU：核   电源   风扇）&#13;
&#13;
### 2.2操作系统&#13;
&#13;
1. PC端：x86   32位操作系统，x86-64  64位操作系统&#13;
2. 手机端：arm 32位操作系统，arm64  64位操作系统&#13;
3. Windows、MacOS、dos、Linux、Andorid、ios、鸿蒙&#13;
4. 语言：c语言 、java语言、python--&gt;解释器或者是编译器--&gt;转换成计算机能识别的二进制代码程序代码--&gt;指令      数据&#13;
&#13;
### 2.3应用软件&#13;
&#13;
- web端--&gt;app端（qq、微信、淘宝、美团、手机银行app）--&gt;小程序（微信小程序、支付宝小程序）--&gt;嵌入式设备与App交互&#13;
&#13;
&#13;
## 3.Linux操作系统&#13;
&#13;
1. Linux内核（由linus开发出）--&gt;放到开源平台--&gt;图标（企鹅）、名字linux，没有图形化界面，纯命令界面&#13;
&#13;
2. 小巧、功能全、安全、多用户多任务的操作系统&#13;
&#13;
3. 发行版本：RedHat、Debian、Arch、openSUSE、CentOS、Ubuntu等&#13;
&#13;
4. 客户端系统：Windows、Android、IOS、Harmony、个人用Linux&#13;
&#13;
5. 服务端系统：99%Linux&#13;
&#13;
6. 服务器：365天*24小时运行、服务器的本质也是电脑，是功能更加强大的电脑&#13;
&#13;
7. 学校一般自建服务器（托管官网、学生数据等）&#13;
&#13;
8. 中小型公司租云服务器：阿里云、腾讯云、百度云&#13;
&#13;
9. 大型公司自建服务器，提供云服务器资源&#13;
&#13;
## 4.电脑装多系统&#13;
&#13;
- VM虚拟机：在宿主机中独立出一块空间（CPU，内存，网卡，显卡，声卡）&#13;
- 镜像文件：后缀为.iso的操作系统文件&#13;
&#13;
## 5.软件的安装&#13;
&#13;
-   安装的路径中不要出现中文，或者是特殊符号   it-install(错误示范)&#13;
&#13;
-   安装路径中只能有字母或下划线&#13;
&#13;
-    D:\it_install、D:\vm_install&#13;
&#13;
## 6.远程连接、换源、安装软件包&#13;
&#13;
### 6.1使用ip  addr命令查看IP地址&#13;
&#13;
### 6.2如果不能上网，解决办法？&#13;
&#13;
```shell&#13;
cd /etc/sysconfig/network-scripts&#13;
vi ifcfg-ens33#后半网卡名可不同&#13;
```&#13;
-   进入后将光标移动到最下面，然后输入'i'&#13;
&#13;
-   将最后一行的no修改为yes，再点击键盘左上角的ESC，输入:wq!再按回车（按ZZ也可）&#13;
&#13;
### 6.3如果源不可用，解决办法？&#13;
&#13;
```shell&#13;
#CentOS7换源&#13;
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo&#13;
```&#13;
### 6.4出现command  not  found如何解决？&#13;
&#13;
  - 尝试安装使用的命令、例：`yum install ifconfig`&#13;
  - 提示包不存在可使用yum search 命令、例：`yum search ifconfig`&#13;
&#13;
### 6.5yum的作用&#13;
&#13;
```shell&#13;
#在线下载并安装&#13;
yum search 安装包的包名&#13;
yum -y install 安装包名&#13;
```&#13;
&#13;
## 7.Linux文件管理系统&#13;
&#13;
```shell&#13;
#目录结构树&#13;
/etc     存放配置相关的文件      /etc/profile 环境变量 /etc/sysconfig/newrok-Scripts 网卡配置&#13;
/bin     存放的是可执行的命令文件     启动服务器&#13;
/sbin    存放的是root用户的可执行的命令文件&#13;
/root    是root用户的家目录&#13;
/home    是普通用户的家目录&#13;
/opt     存放的是临时文件相关的一些目录&#13;
/mnt     存放的是挂载文件相关的目录&#13;
```&#13;
&#13;
## 8.Linux基本命令&#13;
&#13;
### 8.1目录相关的命令&#13;
&#13;
```shell&#13;
'创建文件夹' mkdir 文件夹名1&#13;
'创建多个文件夹' mkdir 文件夹1 文件夹2&#13;
'创建多层级的文件' mkdir -p A/B&#13;
'删除空文件夹' rmdir 文件夹名&#13;
'删除非空的文件夹' rm -r 非空目录名&#13;
'强制删除非空文件夹' rm -rf 非空的目录名 &#13;
'复制文件夹到指定的目录' cp -r 要复制的文件 复制到哪里去&#13;
'剪切文件到指定的目录' mv 要剪切的文件 剪切到哪里去&#13;
'重命名' mv 要重命名的文件夹/文件 新的文件夹/文件的名字&#13;
```&#13;
&#13;
###  8.2编写路径&#13;
&#13;
-  绝对路径：一次到达，从根目录开始写、例：`/etc/ssh/sshd_config`&#13;
-  相对路径：相对与当前目录而言、例：`../home/hanli`(假设当前目录为root)&#13;
&#13;
### 8.3文件相关的命令&#13;
&#13;
```shell&#13;
'创建文件' touch 文件1&#13;
'创建多个文件' touch f2 f3&#13;
'弹出提示信息删除文件' rm 文件名  &#13;
'强制删除文件' rm -f 文件名&#13;
'复制文件' cp 要复制的文件 复制到哪里去&#13;
'剪切文件' mv 要剪切的文件 剪切到哪里去&#13;
'覆盖写如内容到文件中'&#13;
echo 'i love linux' &gt; f1&#13;
echo 'i love python' &gt; f1&#13;
'追加写内容到指定的文件' echo 'i love oracle' &gt;&gt; f1&#13;
```&#13;
&#13;
```shell&#13;
'查看文件的内容'&#13;
cat 查看小文件&#13;
cat -n 文件名 #n不能代表代表任意数字&#13;
more 文件名&#13;
less 文件名 #按照屏幕比例显示内容，可以输入next进行翻页&#13;
head -n 文件名 #查看文件的前n行，n代表的任意数字&#13;
tail -n 文件名 #查看文件的最后n行，n代表任意数字&#13;
n 文件名 #带行号显示文件的所有内容&#13;
'查看一个文件的第3行到第5行' sed -n 'n1,n2p' 文件名  #n1和n2代表的是两个数字&#13;
'查看一个文件的第3行到第5行' head -5 文件名 | tail -3&#13;
'查看文件的第5行' sed -n '5p' 文件名&#13;
```&#13;
&#13;
### 8.4打包压缩相关的命令&#13;
&#13;
### 8.5进程服务相关的命令&#13;
&#13;
### 8.6权限相关的命令&#13;
&#13;
### 8.7其他的常用命令&#13;
&#13;
```shell&#13;
cd 'change directory' '切换目录'&#13;
cd .. '切换到上一级目录'&#13;
cd ../.. '切换到上上一级目录'&#13;
cd / '切换到根目录'&#13;
cd ~ '切换到家目录'&#13;
cd - '切换到上次目录'&#13;
. '代表的是当前目录'&#13;
.. '代表的是上级目录'&#13;
ls 'list' '列出所有文件'&#13;
ls -a '显示所有的文件' #all: 所有的文件的包括了隐藏&#13;
ls -l '显示文件的详细信息'&#13;
ls -al '显示所有文件的详细信息'&#13;
pwd 'print work directory' '打印当前工作目录'&#13;
tree '树形结构展示当前目录下的所有文件或文件夹'&#13;
```。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/9.html</guid><pubDate>Mon, 06 Jan 2025 12:34:25 +0000</pubDate></item><item><title>MySQL数据库的练习</title><link>https://hantianzhun.github.io/blog/post/8.html</link><description>### 1.导入exam-utf8（无外键）数据库&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 导入数据库是为了方便后面的查询练习&#13;
&#13;
```sql&#13;
DROP database IF EXISTS exam;&#13;
&#13;
CREATE DATABASE IF NOT EXISTS exam CHARSET=utf8;  &#13;
&#13;
USE exam;&#13;
&#13;
/*创建部门表*/&#13;
CREATE TABLE dept(
deptno INT PRIMARY KEY,&#13;
dname VARCHAR(50),&#13;
loc VARCHAR(50)&#13;
);&#13;
&#13;
/*创建雇员表*/&#13;
CREATE TABLE emp(&#13;
empno INT PRIMARY KEY,&#13;
ename VARCHAR(50),&#13;
job VARCHAR(50),&#13;
mgr INT,&#13;
hiredate DATE,
sal DECIMAL(7,2),&#13;
COMM DECIMAL(7,2),&#13;
deptno INT&#13;
);&#13;
&#13;
/*创建工资等级表*/&#13;
CREATE TABLE salgrade(&#13;
grade INT PRIMARY KEY,&#13;
losal INT,&#13;
hisal INT&#13;
);&#13;
&#13;
/*创建学生表*/&#13;
CREATE TABLE stu(&#13;
sid INT PRIMARY KEY,&#13;
sname VARCHAR(50),&#13;
age INT,&#13;
gander VARCHAR(10),&#13;
province VARCHAR(50),&#13;
tuition INT&#13;
);&#13;
&#13;
/*插入dept表数据*/&#13;
INSERT INTO dept VALUES (10, '教研部', '北京');&#13;
INSERT INTO dept VALUES (20, '学工部', '上海');&#13;
INSERT INTO dept VALUES (30, '销售部', '广州');&#13;
INSERT INTO dept VALUES (40, '财务部', '武汉');&#13;
&#13;
/*插入emp表数据*/&#13;
INSERT INTO emp VALUES (1009, '曾阿牛', '董事长', NULL, '2001-11-17', 50000, NULL, 10);&#13;
INSERT INTO emp VALUES (1004, '刘备', '经理', 1009, '2001-04-02', 29750, NULL, 20);&#13;
INSERT INTO emp VALUES (1006, '关羽', '经理', 1009, '2001-05-01', 28500, NULL, 30);&#13;
INSERT INTO emp VALUES (1007, '张飞', '经理', 1009, '2001-09-01', 24500, NULL, 10);&#13;
INSERT INTO emp VALUES (1008, '诸葛亮', '分析师', 1004, '2007-04-19', 30000, NULL, 20);&#13;
INSERT INTO emp VALUES (1013, '庞统', '分析师', 1004, '2001-12-03', 30000, NULL, 20);&#13;
INSERT INTO emp VALUES (1002, '黛绮丝', '销售员', 1006, '2001-02-20', 16000, 3000, 30);&#13;
INSERT INTO emp VALUES (1003, '殷天正', '销售员', 1006, '2001-02-22', 12500, 5000, 30);&#13;
INSERT INTO emp VALUES (1005, '谢逊', '销售员', 1006, '2001-09-28', 12500, 14000, 30);&#13;
INSERT INTO emp VALUES (1010, '韦一笑', '销售员', 1006, '2001-09-08', 15000, 0, 30);&#13;
INSERT INTO emp VALUES (1012, '程普', '文员', 1006, '2001-12-03', 9500, NULL, 30);&#13;
INSERT INTO emp VALUES (1014, '黄盖', '文员', 1007, '2002-01-23', 13000, NULL, 10);&#13;
INSERT INTO emp VALUES (1011, '周泰', '文员', 1008, '2007-05-23', 11000, NULL, 20);&#13;
&#13;
&#13;
INSERT INTO emp VALUES (1001, '甘宁', '文员', 1013, '2000-12-17', 8000, NULL, 20);&#13;
&#13;
/*插入salgrade表数据*/&#13;
INSERT INTO salgrade VALUES (1, 7000, 12000);&#13;
INSERT INTO salgrade VALUES (2, 12010, 14000);&#13;
INSERT INTO salgrade VALUES (3, 14010, 20000);&#13;
INSERT INTO salgrade VALUES (4, 20010, 30000);&#13;
INSERT INTO salgrade VALUES (5, 30010, 99990);&#13;
&#13;
/*插入stu表数据*/&#13;
INSERT INTO `stu` VALUES ('1', '王永', '23', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('2', '张雷', '25', '男', '辽宁', '2500');&#13;
INSERT INTO `stu` VALUES ('3', '李强', '22', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('4', '宋永合', '25', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('5', '叙美丽', '23', '女', '北京', '1000');&#13;
INSERT INTO `stu` VALUES ('6', '陈宁', '22', '女', '山东', '2500');&#13;
INSERT INTO `stu` VALUES ('7', '王丽', '21', '女', '北京', '1600');&#13;
INSERT INTO `stu` VALUES ('8', '李永', '23', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('9', '张玲', '23', '女', '广州', '2500');&#13;
INSERT INTO `stu` VALUES ('10', '啊历', '18', '男', '山西', '3500');&#13;
INSERT INTO `stu` VALUES ('11', '王刚', '23', '男', '湖北', '4500');&#13;
INSERT INTO `stu` VALUES ('12', '陈永', '24', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('13', '李雷', '24', '男', '辽宁', '2500');&#13;
INSERT INTO `stu` VALUES ('14', '李沿', '22', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('15', '王小明', '25', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('16', '王小丽', '23', '女', '北京', '1000');&#13;
INSERT INTO `stu` VALUES ('17', '唐宁', '22', '女', '山东', '2500');&#13;
INSERT INTO `stu` VALUES ('18', '唐丽', '21', '女', '北京', '1600');&#13;
INSERT INTO `stu` VALUES ('19', '啊永', '23', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('20', '唐玲', '23', '女', '广州', '2500');&#13;
INSERT INTO `stu` VALUES ('21', '叙刚', '18', '男', '山西', '3500');&#13;
INSERT INTO `stu` VALUES ('22', '王累', '23', '男', '湖北', '4500');&#13;
INSERT INTO `stu` VALUES ('23', '赵安', '23', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('24', '关雷', '25', '男', '辽宁', '2500');&#13;
INSERT INTO `stu` VALUES ('25', '李字', '22', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('26', '叙安国', '25', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('27', '陈浩难', '23', '女', '北京', '1000');&#13;
INSERT INTO `stu` VALUES ('28', '陈明', '22', '女', '山东', '2500');&#13;
INSERT INTO `stu` VALUES ('29', '孙丽', '21', '女', '北京', '1600');&#13;
INSERT INTO `stu` VALUES ('30', '李治国', '23', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('31', '张娜', '23', '女', '广州', '2500');&#13;
INSERT INTO `stu` VALUES ('32', '安强', '18', '男', '山西', '3500');&#13;
INSERT INTO `stu` VALUES ('33', '王欢', '23', '男', '湖北', '4500');&#13;
INSERT INTO `stu` VALUES ('34', '周天乐', '23', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('35', '关雷', '25', '男', '辽宁', '2500');&#13;
INSERT INTO `stu` VALUES ('36', '吴强', '22', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('37', '吴合国', '25', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('38', '正小和', '23', '女', '北京', '1000');&#13;
INSERT INTO `stu` VALUES ('39', '吴丽', '22', '女', '山东', '2500');&#13;
INSERT INTO `stu` VALUES ('40', '冯含', '21', '女', '北京', '1600');&#13;
INSERT INTO `stu` VALUES ('41', '陈冬', '23', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('42', '关玲', '23', '女', '广州', '2500');&#13;
INSERT INTO `stu` VALUES ('43', '包利', '18', '男', '山西', '3500');&#13;
INSERT INTO `stu` VALUES ('44', '威刚', '23', '男', '湖北', '4500');&#13;
INSERT INTO `stu` VALUES ('45', '李永', '23', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('46', '张关雷', '25', '男', '辽宁', '2500');&#13;
INSERT INTO `stu` VALUES ('47', '送小强', '22', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('48', '关动林', '25', '男', '北京', '1500');&#13;
INSERT INTO `stu` VALUES ('49', '苏小哑', '23', '女', '北京', '1000');&#13;
INSERT INTO `stu` VALUES ('50', '赵宁', '22', '女', '山东', '2500');&#13;
INSERT INTO `stu` VALUES ('51', '陈丽', '21', '女', '北京', '1600');&#13;
INSERT INTO `stu` VALUES ('52', '钱小刚', '23', '男', '北京', '3500');&#13;
INSERT INTO `stu` VALUES ('53', '艾林', '23', '女', '广州', '2500');&#13;
INSERT INTO `stu` VALUES ('54', '郭林', '18', '男', '山西', '3500');&#13;
INSERT INTO `stu` VALUES ('55', '周制强', '23', '男', '湖北', '4500');&#13;
```&#13;
&#13;
### 2.创建数据库表&#13;
&#13;
```sql&#13;
-- 注释：&#13;
-- 单行注释&#13;
# 单行注释&#13;
&#13;
/*&#13;
多行注释&#13;
多行注释&#13;
多行注释&#13;
*/&#13;
&#13;
# 创建库的语句：&#13;
# CREATE DATABASE 库名称;&#13;
CREATE DATABASE mmb;&#13;
USE mmb;  -- 使用库&#13;
&#13;
# 创建表&#13;
/*&#13;
CREATE TABLE 表名称(&#13;
列名1 类型 约束,&#13;
列名2 类型 约束,&#13;
……&#13;
列名N 类型 约束&#13;
)CHARSET=utf8;&#13;
*/&#13;
# 数据类型：&#13;
# 数值：&#13;
# int&#13;
# float  decimail&#13;
# 字符：char / varchar&#13;
# 日期时间: date / datetime&#13;
&#13;
CREATE DATABASE IF NOT EXISTS oneday;&#13;
&#13;
USE oneday;&#13;
&#13;
CREATE TABLE dept(&#13;
deptno INT PRIMARY KEY AUTO_INCREMENT,&#13;
deptname VARCHAR(10) UNIQUE NOT NULL,&#13;
loc VARCHAR(20) NOT NULL DEFAULT '北京'&#13;
)CHARSET=utf8;&#13;
&#13;
INSERT INTO dept(deptname,loc) VALUES('销售部','北京');&#13;
INSERT INTO dept(deptname,loc) VALUES('人事部','上海');&#13;
INSERT INTO dept(deptname) VALUES('研发部');&#13;
INSERT INTO dept(deptno,deptname,loc) VALUES(4,'外包部','深圳');&#13;
```&#13;
&#13;
### 3.主键自增、唯一、非空、默认值&#13;
&#13;
```sql&#13;
# 主键约束：&#13;
# 唯一、非空、一个表最多一个主键&#13;
&#13;
CREATE TABLE dept(&#13;
deptno INT PRIMARY KEY,&#13;
dname VARCHAR(10),&#13;
loc VARCHAR(20)&#13;
)CHARSET=utf8;&#13;
&#13;
INSERT INTO dept VALUES(10,'教研部','北京');&#13;
INSERT INTO dept VALUES(20,'学工部','上海');&#13;
INSERT INTO dept VALUES(NULL,NULL,NULL);&#13;
INSERT INTO dept VALUES(20,NULL,NULL);&#13;
&#13;
# 主键自增：数据类型一般是整数&#13;
# PRIMARY KEY 主键  AUTO_INCREMENT 自增&#13;
CREATE TABLE dept(&#13;
deptno INT PRIMARY KEY AUTO_INCREMENT,&#13;
dname VARCHAR(10),&#13;
loc VARCHAR(20)&#13;
)CHARSET=utf8;&#13;
&#13;
INSERT INTO dept(dname,loc) VALUES('教研部','北京');&#13;
INSERT INTO dept(dname,loc) VALUES('学工部','上海');&#13;
INSERT INTO dept VALUES(30,'销售部','广州');&#13;
INSERT INTO dept(deptno,dname,loc)VALUES(31,'财务部','武汉');&#13;
&#13;
# 唯一约束：&#13;
# 值必须是唯一的、一个表可以有多个唯一约束、值可以为空&#13;
CREATE TABLE dept(&#13;
deptno INT PRIMARY KEY AUTO_INCREMENT,&#13;
dname VARCHAR(10) UNIQUE,&#13;
loc VARCHAR(20)&#13;
)CHARSET=utf8;&#13;
&#13;
INSERT INTO dept(dname,loc) VALUES('教研部','北京');  # 只能执行1次&#13;
INSERT INTO dept(dname,loc) VALUES('学工部','上海');  &#13;
INSERT INTO dept(dname,loc) VALUES(NULL,'上海');  &#13;
&#13;
# 非空约束&#13;
# not null&#13;
CREATE TABLE dept(&#13;
deptno INT PRIMARY KEY AUTO_INCREMENT,&#13;
dname VARCHAR(10) UNIQUE NOT NULL,&#13;
loc VARCHAR(20)&#13;
)CHARSET=utf8;&#13;
&#13;
INSERT INTO dept(dname,loc) VALUES('教研部','北京');  # 只能执行1次&#13;
INSERT INTO dept(dname,loc) VALUES('学工部','上海');  &#13;
INSERT INTO dept(dname,loc) VALUES('','上海');  &#13;
&#13;
# NULL : 空&#13;
# ''   : 空字符串&#13;
&#13;
CREATE TABLE dept(&#13;
deptno INT PRIMARY KEY AUTO_INCREMENT,&#13;
dname VARCHAR(10) UNIQUE NOT NULL,&#13;
loc VARCHAR(20) NOT NULL DEFAULT ''&#13;
)CHARSET=utf8;&#13;
&#13;
INSERT INTO dept(dname,loc) VALUES('教研部','北京'); &#13;
INSERT INTO dept(dname) VALUES('学工部'); &#13;
INSERT INTO dept(dname,loc) VALUES('财务部',NULL); &#13;
&#13;
# 主键自增、唯一、非空、默认值：&#13;
# 主键：唯一、非空、一个表最多只有一个&#13;
# 唯一：唯一、可以有多个唯一约束、可以为NULL&#13;
# 非空：不能为空&#13;
# 默认值：不指定值的情况使用默认值&#13;
# 主键 + 自增&#13;
# 唯一 + 非空&#13;
# 非空 + 默认值&#13;
```&#13;
&#13;
&#13;
&#13;
### 4.外键约束&#13;
&#13;
```sql&#13;
# 外键约束：&#13;
# 保证引用的完整性&#13;
# RESTRIC：如果子表中存在与父表相关联的记录，则阻止父表的更新或删除操作。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/8.html</guid><pubDate>Sun, 17 Nov 2024 23:05:19 +0000</pubDate></item><item><title>开源镜像站及部分Linux换源</title><link>https://hantianzhun.github.io/blog/post/7.html</link><description># 一、国内常用的开源镜像站&#13;
&#13;
- 网易：http://mirrors.163.com/&#13;
- 搜狐：http://mirrors.sohu.com/&#13;
- 阿里：http://mirrors.aliyun.com/&#13;
- 腾讯：https://mirrors.cloud.tencent.com/&#13;
- 华为：https://mirrors.huaweicloud.com/home/&#13;
- 清华大学：https://mirrors.tuna.tsinghua.edu.cn/&#13;
- 中国科学技术大学：https://mirrors.ustc.edu.cn/&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 上述并不是全部，只是本人日常使用最多的一些镜像站&#13;
&#13;
# 二、Linux换源(自用)&#13;
&#13;
## 1、Debian12换源(以中科大镜像源为例)&#13;
&#13;
### a.先换部分源&#13;
&#13;
```&#13;
sudo sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list&#13;
```&#13;
&#13;
### b.安装vim之后再编辑文件&#13;
&gt; [!NOTE]&#13;
&gt; 添加自由固件，并修改安全更新源&#13;
&#13;
```&#13;
/etc/apt/sources.list&#13;
```&#13;
&#13;
```&#13;
# 默认注释了源码仓库，如有需要可自行取消注释&#13;
deb http://mirrors.ustc.edu.cn/debian bookworm main contrib non-free non-free-firmware&#13;
# deb-src http://mirrors.ustc.edu.cn/debian bookworm main contrib non-free non-free-firmware&#13;
deb http://mirrors.ustc.edu.cn/debian bookworm-updates main contrib non-free non-free-firmware&#13;
# deb-src http://mirrors.ustc.edu.cn/debian bookworm-updates main contrib non-free non-free-firmware&#13;
&#13;
# backports 软件源，请按需启用&#13;
# deb http://mirrors.ustc.edu.cn/debian bookworm-backports main contrib non-free non-free-firmware&#13;
# deb-src http://mirrors.ustc.edu.cn/debian bookworm-backports main contrib non-free non-free-firmware&#13;
&#13;
# 建议在确实有需要的情况下才使用镜像站的安全更新源&#13;
deb http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware&#13;
# deb-src http://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware&#13;
```&#13;
&#13;
### c.使用`sudo apt-get update`更新索引生效&#13;
&#13;
## 2.CentOS Stream&#13;
&#13;
### a.使用vim编辑器换源&#13;
&#13;
#### 1.第一个文件&#13;
&#13;
```&#13;
/etc/yum.repos.d/centos.repo&#13;
```&#13;
&#13;
```&#13;
[baseos]&#13;
name=CentOS Stream $releasever - BaseOS&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/BaseOS/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=1&#13;
&#13;
[baseos-debuginfo]&#13;
name=CentOS Stream $releasever - BaseOS - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/BaseOS/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[baseos-source]&#13;
name=CentOS Stream $releasever - BaseOS - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/BaseOS/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[appstream]&#13;
name=CentOS Stream $releasever - AppStream&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/AppStream/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=1&#13;
&#13;
[appstream-debuginfo]&#13;
name=CentOS Stream $releasever - AppStream - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/AppStream/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[appstream-source]&#13;
name=CentOS Stream $releasever - AppStream - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/AppStream/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[crb]&#13;
name=CentOS Stream $releasever - CRB&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/CRB/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-crb-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=1&#13;
&#13;
[crb-debuginfo]&#13;
name=CentOS Stream $releasever - CRB - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/CRB/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-crb-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[crb-source]&#13;
name=CentOS Stream $releasever - CRB - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/CRB/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-crb-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
```&#13;
&#13;
#### 2.第二个文件&#13;
&#13;
```&#13;
/etc/yum.repos.d/centos-addons.repo&#13;
```&#13;
&#13;
```&#13;
[highavailability]&#13;
name=CentOS Stream $releasever - HighAvailability&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/HighAvailability/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-highavailability-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=0&#13;
&#13;
[highavailability-debuginfo]&#13;
name=CentOS Stream $releasever - HighAvailability - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/HighAvailability/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-highavailability-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[highavailability-source]&#13;
name=CentOS Stream $releasever - HighAvailability - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/HighAvailability/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-highavailability-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[nfv]&#13;
name=CentOS Stream $releasever - NFV&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/NFV/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-nfv-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=0&#13;
&#13;
[nfv-debuginfo]&#13;
name=CentOS Stream $releasever - NFV - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/NFV/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-nfv-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[nfv-source]&#13;
name=CentOS Stream $releasever - NFV - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/NFV/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-nfv-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[rt]&#13;
name=CentOS Stream $releasever - RT&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/RT/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-rt-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=0&#13;
&#13;
[rt-debuginfo]&#13;
name=CentOS Stream $releasever - RT - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/RT/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-rt-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[rt-source]&#13;
name=CentOS Stream $releasever - RT - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/RT/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-rt-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[resilientstorage]&#13;
name=CentOS Stream $releasever - ResilientStorage&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/ResilientStorage/$basearch/os&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-resilientstorage-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=0&#13;
&#13;
[resilientstorage-debuginfo]&#13;
name=CentOS Stream $releasever - ResilientStorage - Debug&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/ResilientStorage/$basearch/debug/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-resilientstorage-debug-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[resilientstorage-source]&#13;
name=CentOS Stream $releasever - ResilientStorage - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/$releasever-stream/ResilientStorage/source/tree/&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-resilientstorage-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
&#13;
[extras-common]&#13;
name=CentOS Stream $releasever - Extras packages&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/SIGs/$releasever-stream/extras/$basearch/extras-common&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-extras-sig-extras-common-$stream&amp;arch=$basearch&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Extras-SHA512&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
countme=1&#13;
enabled=1&#13;
&#13;
[extras-common-source]&#13;
name=CentOS Stream $releasever - Extras packages - Source&#13;
baseurl=https://mirrors.ustc.edu.cn/centos-stream/SIGs/$releasever-stream/extras/source/extras-common&#13;
# metalink=https://mirrors.centos.org/metalink?repo=centos-extras-sig-extras-common-source-$stream&amp;arch=source&amp;protocol=https,http&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Extras-SHA512&#13;
gpgcheck=1&#13;
repo_gpgcheck=0&#13;
metadata_expire=6h&#13;
enabled=0&#13;
```&#13;
&#13;
### b.运行 `yum makecache` 更新缓存。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/7.html</guid><pubDate>Mon, 11 Nov 2024 06:24:25 +0000</pubDate></item><item><title>临时邮箱的使用</title><link>https://hantianzhun.github.io/blog/post/6.html</link><description>## 一、几个临时邮箱地址&#13;
&#13;
1. [tempmail](https://tempmail.plus/zh) 可随用随丢&#13;
2. [临时邮件](https://mail.tm/zh) 可一直使用的临时邮箱&#13;
3. [临时教育邮箱 ](https://mail.sunls.de/) 可以尝试注册某些需要教育邮箱的网站&#13;
4. [一次性电子邮件](https://mail.td/zh)&#13;
5. [仅提供临时邮箱接收邮件](https://mail.loli.vet/)&#13;
&#13;
## 二、临时邮箱的使用&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 临时邮箱一般都为接验证码使用，我只以上述第五个演示接码操作。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/6.html</guid><pubDate>Tue, 01 Oct 2024 05:19:07 +0000</pubDate></item><item><title>Android端压缩与解压</title><link>https://hantianzhun.github.io/blog/post/5.html</link><description>## 1.安装软件&#13;
&#13;
### 1.1两款软件&#13;
&#13;
#### ZArchiverPro&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; ZArchiverPro是大佬分享的，可以使用我提供是链接进行下载，有必要可以**支持正版**&#13;
&gt;&#13;
&gt; 只要不是远古手机或者是Redmi 9A等使用32位系统的，都**建议使用64位版本**&#13;
&gt;&#13;
&gt; [armv8a(64位)](https://wwwe.lanzouq.com/i0GYG29iqykf) 密码:h80j	[armv7a(32位)](https://wwwe.lanzouq.com/iqbji1npc15i) 密码:9fih&#13;
&#13;
#### MT文件管理器&#13;
&#13;
&gt; [!NOTE]&#13;
&gt;&#13;
&gt; [下载地址](https://mt2.cn/)&#13;
&gt;&#13;
&gt; mt管理器其免费功能已经够用 **！！！！**&#13;
&gt;&#13;
&gt; **如果出现zip文件乱码的，可以尝试mt管理器解压。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/5.html</guid><pubDate>Sun, 08 Sep 2024 06:39:02 +0000</pubDate></item><item><title> 阅读源仓库的使用

</title><link>https://hantianzhun.github.io/blog/post/4.html</link><description>## 一、访问网址&#13;
### [源仓库](https://www.yckceo.com/yuedu/index/index.html)的地址&#13;
&#13;
| 访问网址之后的界面 | 1.点书源合集 |  2.合适的点进去，网络导入复制 |&#13;
|:-----:|:-----:|:-----:|&#13;
| &lt;img src='https://hantianzhun.github.io/blog/issues4.1.jpg' alt='1000017082.jpg' style='zoom:25%;' /&gt; | &lt;img src='https://hantianzhun.github.io/blog/issues4.2.jpg' alt='1000017084.jpg' style='zoom:25%;' /&gt; | &lt;img src='https://hantianzhun.github.io/blog/issues4.3.jpg' alt='1000017088.jpg' style='zoom:25%;' /&gt; |&#13;
| 图一 | 图二 | 图三 |&#13;
## 二、导入书源&#13;
&#13;
导入书源请看[这里](https://blog.hanli.us.kg/post/3.html#2.导入书源)&#13;
。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/4.html</guid><pubDate>Tue, 03 Sep 2024 08:33:45 +0000</pubDate></item><item><title>Android端开源阅读安装及导入书源</title><link>https://hantianzhun.github.io/blog/post/3.html</link><description>## 1.安装软件&#13;
&#13;
### 1.1 在github上面进行下载&#13;
&#13;
```&#13;
https://github.com/gedoor/legado/releases&#13;
```&#13;
&#13;
### 1.2 蓝奏云网盘&#13;
&#13;
下载需要把浏览器ua改成电脑版/电脑模式/PC等&#13;
&#13;
```shell&#13;
https://wwwe.lanzouq.com/ibQ6728pr7mh&#13;
密码:c6nu&#13;
```&#13;
&#13;
|                    1.这里以via浏览器为例                     |                        2.点击电脑模式                        |&#13;
| :----------------------------------------------------------: | :----------------------------------------------------------: |&#13;
| &lt;img src='https://hantianzhun.github.io/blog/issues2.1.png' alt='20482.png' style='zoom:25%;' /&gt; | &lt;img src='https://hantianzhun.github.io/blog/issues2.2.png' alt='20483.png' style='zoom:25%;' /&gt; |&#13;
|                             图一                             |                             图二                             |&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 此时上图图二可能会白屏，是因为缩放问题，从外面双指向里捏合就能看到上述图片。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/3.html</guid><pubDate>Sat, 31 Aug 2024 09:41:06 +0000</pubDate></item><item><title>Android端clash的安装与基础使用</title><link>https://hantianzhun.github.io/blog/post/2.html</link><description>## 1.安装软件&#13;
&#13;
### 1.1 在github上面进行下载&#13;
&#13;
普通手机用户请下载armv8a(64位)版本，太古老的手机可以使用armv7a(32位)版本，X86等特殊设备可以下载对应的版本。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/2.html</guid><pubDate>Thu, 29 Aug 2024 06:00:16 +0000</pubDate></item><item><title>本博客发表文章及Markdown语法</title><link>https://hantianzhun.github.io/blog/post/1.html</link><description># 一、本博客文章的发表&#13;
&#13;
## 1.访问github&#13;
&#13;
**访问[写作地址](https://github.com/hantianzhun/hantianzhun.github.io)，可以得到如下页面，此时最好先登录github账号。</description><guid isPermaLink="true">https://hantianzhun.github.io/blog/post/1.html</guid><pubDate>Thu, 29 Aug 2024 05:32:36 +0000</pubDate></item></channel></rss>